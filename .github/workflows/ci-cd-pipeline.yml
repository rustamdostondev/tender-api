name: HAMROH MARKET CI/CD PIPELINE

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  setup-node:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --force

      - name: Build
        run: npm run build

  dockerize-app:
    name: 'Dockerize app'
    runs-on: ubuntu-latest
    needs: setup-node
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to Prod
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ github.event.repository.name }}:latest


    name: Deploy to Digital Ocean
    needs: dockerize-app
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Node.js app to Prod
        if: github.ref_name == 'main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ../home/hamroh-auction
            docker pull ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            docker compose up -d --force-recreate hamroh-auction-container
      - name: Deploy Node.js app to Dev
        if: github.ref_name == 'dev'
        uses: appleboy/ssh-action@v1.0.3

        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ../home/hamroh-auction-dev
            docker pull ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:dev
            docker compose up -d --force-recreate hamroh-auction-dev-container

      - name: Tg Alert to prod
        if: github.ref_name == 'main'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Full Name: ${{ github.event.head_commit.author.name }}
            Username: ${{ github.actor }}
            Commit message: ${{ github.event.head_commit.message }}
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Status: ${{ job.status }}
            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
            Whinch app : PRODUCTION
      - name: Tg Alert to dev
        if: github.ref_name == 'dev'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Full Name: ${{ github.event.head_commit.author.name }}
            Username: ${{ github.actor }}
            Commit message: ${{ github.event.head_commit.message }}
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Status: ${{ job.status }}
            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
            Whinch app : DEVELOPMENT
