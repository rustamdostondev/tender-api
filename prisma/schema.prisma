// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          String    @id @default(uuid()) @db.VarChar(24)
  phone       String    @unique @db.VarChar(1024)
  name        String    @map("name") @db.VarChar(1024)
  password    String    @db.VarChar(1024)
  isVerified  Boolean   @default(false) @map("is_verified")
  lastLoginAt DateTime? @map("last_login_at") @db.Timestamptz
  isDeleted   Boolean   @default(false) @map("is_deleted")

  // Timestamps
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz

  // User IDs
  deletedBy String? @map("deleted_by") @db.VarChar(24)
  createdBy String? @map("created_by") @db.VarChar(24)
  updatedBy String? @map("updated_by") @db.VarChar(24)

  // Relations
  refreshTokens   RefreshToken[]
  userSessions    UserSessions[]
  downloadHistory DownloadHistory[]
  Tenders         Tenders[]
  Proposals       Proposals[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.VarChar(24)
  token     String   @unique @db.VarChar(1024)
  expiresAt DateTime @map("expires_at") @db.Timestamptz
  isDeleted Boolean  @default(false) @map("is_deleted")

  // Relations
  userId String @map("user_id") @db.VarChar(24)
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Timestamps
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz

  // User IDs
  deletedBy String? @map("deleted_by") @db.VarChar(24)
  createdBy String? @map("created_by") @db.VarChar(24)
  updatedBy String? @map("updated_by") @db.VarChar(24)

  @@map("refresh_tokens")
}

model UserSessions {
  id           String   @id @default(uuid()) @db.VarChar(24)
  sessionId    String   @map("session_id") @db.VarChar(1024)
  isActive     Boolean  @default(true) @map("is_active")
  lastActivity DateTime @map("last_activity") @db.Timestamptz
  userAgent    String?  @map("user_agent") @db.VarChar(1024)
  ipAddress    String?  @map("ip_address") @db.VarChar(1024)
  isDeleted    Boolean  @default(false) @map("is_deleted")

  // Timestamps
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz

  // User IDs
  deletedBy String? @map("deleted_by") @db.VarChar(24)
  createdBy String? @map("created_by") @db.VarChar(24)
  updatedBy String? @map("updated_by") @db.VarChar(24)

  // Relations
  userId String @map("user_id") @db.VarChar(24)
  users  Users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}

model Files {
  id         String  @id @default(uuid()) @db.VarChar(24)
  type       String  @db.VarChar(255)
  name       String  @db.VarChar()
  size       Int     @db.Integer
  bucketName String  @map("bucket_name") @db.VarChar(255)
  path       String? @map("path")
  isDeleted  Boolean @default(false) @map("is_deleted")

  // Timestamps
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz

  // User IDs
  deletedById String? @map("deleted_by") @db.VarChar(24)
  createdById String? @map("created_by") @db.VarChar(24)
  updatedById String? @map("updated_by") @db.VarChar(24)

  //Relations
  downloadHistory DownloadHistory[]
  Tenders         Tenders[]
  Proposals       Proposals[]

  @@map("files")
}

model DownloadHistory {
  id        String  @id @default(uuid()) @db.VarChar(24)
  userId    String? @map("user_id") @db.VarChar(24)
  fileId    String? @map("file_id") @db.VarChar(24)
  isDeleted Boolean @default(false) @map("is_deleted")

  // Timestamps
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz

  // Relations
  users Users? @relation(fields: [userId], references: [id], onDelete: Cascade)
  files Files? @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@map("download_history")
}

model Tenders {
  id          String      @id @default(uuid()) @db.VarChar(24)
  title       String
  description String
  category    String
  budget      Float
  deadline    DateTime
  fileId      String?     @map("file_id") @db.VarChar(24)
  status      String      @default("OPEN") // OPEN, CLOSED
  userId      String      @map("user_id") @db.VarChar(24)
  user        Users       @relation(fields: [userId], references: [id])
  file        Files?      @relation(fields: [fileId], references: [id])
  fileTexts   String?     @map("file_texts")
  aiText      String?     @map("ai_text")
  aiResult    String?     @map("ai_result")
  Proposals   Proposals[]

  isDeleted Boolean @default(false) @map("is_deleted")

  // Timestamps
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz

  // User IDs
  deletedById String? @map("deleted_by") @db.VarChar(24)
  createdById String? @map("created_by") @db.VarChar(24)
  updatedById String? @map("updated_by") @db.VarChar(24)

  @@map("tenders")
}

model Proposals {
  id           String   @id @default(uuid()) @db.VarChar(24)
  price        Float
  deliveryTime DateTime @map("delivery_time")
  description  String
  fileId       String?  @map("file_id") @db.VarChar(24)
  fileTexts    String?  @map("file_texts")
  status       String   @default("PENDING") // PENDING, ACCEPTED, REJECTED
  matchPercent Float?   @default(0) @map("match_percent")
  tenderId     String   @map("tender_id")
  userId       String   @map("user_id")
  aiText       String?  @map("ai_text")

  tender Tenders @relation(fields: [tenderId], references: [id])
  user   Users   @relation(fields: [userId], references: [id])
  file   Files?  @relation(fields: [fileId], references: [id])

  isDeleted Boolean @default(false) @map("is_deleted")

  // Timestamps
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz

  // User IDs
  deletedById String? @map("deleted_by") @db.VarChar(24)
  createdById String? @map("created_by") @db.VarChar(24)
  updatedById String? @map("updated_by") @db.VarChar(24)

  @@map("proposals")
}
